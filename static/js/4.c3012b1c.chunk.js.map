{"version":3,"sources":["selectors/view.selectors.js","pages/view/ViewWidget.component.js"],"names":["getWidgetState","createSelector","state","props","widgetId","parseInt","match","params","id","widgets","find","m","widget","ViewComponent","_this$props","this","dispatch","dashboard","fetchDashboard","WidgetComponent","SYSTEM_COMPONENTS","widgetType","react_default","a","createElement","className","Object","assign","isScale","React","PureComponent","connect"],"mappings":"4KAOaA,EAAiBC,yBAAe,CALvB,SAACC,EAAOC,GAC5B,IAAMC,EAAWC,SAASF,EAAMG,MAAMC,OAAOC,GAAI,IAC3CC,EAAUP,EAAMO,QACtB,OAAOA,GAAWA,EAAQC,KAAK,SAAAC,GAAC,OAAIA,EAAEP,WAAaA,MAES,SAAAQ,GAAM,OAAIA,oBCDlEC,+LACiB,IAAAC,EACaC,KAAKZ,MAA7Ba,EADWF,EACXE,SADWF,EACDG,UACHT,IACbQ,EAASE,gDAIJ,IACCN,EAAWG,KAAKZ,MAAhBS,OACFO,EAAkBP,GAAUQ,IAAkBR,EAAOS,YAC3D,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZb,EACCU,EAAAC,EAAAC,cAACL,EAADO,OAAAC,OAAA,GAAqBf,EAArB,CAA6BgB,SAAO,KAEpCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAjBCI,IAAMC,eA8BnBC,sBALS,SAAC7B,EAAOC,GAAR,MAAmB,CACzCS,OAAQZ,EAAeE,EAAMe,UAAWd,GACxCc,UAAWf,EAAMe,YAGJc,CAAyBlB","file":"static/js/4.c3012b1c.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst getWidgetInfo = (state, props) => {\r\n  const widgetId = parseInt(props.match.params.id, 10);\r\n  const widgets = state.widgets;\r\n  return widgets && widgets.find(m => m.widgetId === widgetId);\r\n};\r\nexport const getWidgetState = createSelector([getWidgetInfo], widget => widget);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getWidgetState } from '../../selectors/view.selectors';\r\nimport { SYSTEM_COMPONENTS } from '../../constants';\r\nimport { fetchDashboard } from '../../actions/dashboard.action';\r\n\r\nclass ViewComponent extends React.PureComponent {\r\n  componentWillMount() {\r\n    const { dispatch, dashboard } = this.props;\r\n    if (!dashboard.id) {\r\n      dispatch(fetchDashboard());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { widget } = this.props;\r\n    const WidgetComponent = widget && SYSTEM_COMPONENTS[widget.widgetType];\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          {widget ? (\r\n            <WidgetComponent {...widget} isScale />\r\n          ) : (\r\n            <div className=\"lds-hourglass\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  widget: getWidgetState(state.dashboard, props),\r\n  dashboard: state.dashboard\r\n});\r\n\r\nexport default connect(mapStateToProps)(ViewComponent);\r\n"],"sourceRoot":""}