{"version":3,"sources":["selectors/baseWidget.selectors.js","components/BaseWidget/BaseWidget.component.js","components/WidgetSetting/BaseSetting.component.js","pages/dashboard/dashboard.view.js","pages/dashboard/dashboard.component.js"],"names":["getConfigButtonState","createSelector","props","isEditDashboard","isEditing","widgetType","state","getMaximizeButtonState","getRemoveButtonState","BaseWidget","onClickSetting","_this$props","_this","dispatch","widgetId","DashboardActionCreator","goToSetting","onDelete","_this$props2","deleteWidget","_this$props3","this","title","isSetting","isDeleted","isMaximized","children","react_default","a","createElement","className","fa","onClick","Link","to","concat","React","PureComponent","connect","BaseSetting","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","target","value","updateTitle","updateWidth","maxWidth","updateHeight","maxHeight","updateWidgetInfo","objectSpread","SettingComponent","SETTING_COMPONENTS","reactstrap_es","for","type","autoComplete","defaultValue","disabled","LayoutControls","_ref","layoutType","onChangeLayout","LAYOUT_TYPES","A_COLUMN","AA_COLUMN","AAA_COLUMN","AB_COLUMN","md","ABA_COLUMN","size","BA_COLUMN","style","transform","DashboardView","_ref2","dashboard","widgets","map","WidgetComponent","SYSTEM_COMPONENTS","BaseWidget_component","assign","key","isEdit","dashboard_view_LayoutControls","id","Dashboard","updateLayout","changeLayout","bind","assertThisInitialized","fetchDashboard","drake","destroy","dragula","document","getElementById","direction","moves","el","container","handle","classList","contains","querySelectorAll","forEach","element","idx","LAYOUT_STYLES","oddClass","evenClass","dashboard_view_DashboardView"],"mappings":"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","file":"static/js/5.6afc2ead.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst getConfigButtonSelector = props => {\r\n  const { isEditDashboard, isEditing, widgetType } = props;\r\n  return (!isEditing && isEditDashboard) || !widgetType;\r\n};\r\n\r\nconst getMaximizeButtonSelector = props => {\r\n  const { isEditing, widgetType } = props;\r\n  return !isEditing && widgetType !== 'DEFAULT_WIDGET';\r\n};\r\n\r\nconst getRemoveButtonSelector = props => {\r\n  const { isEditDashboard, widgetType, isEditing } = props;\r\n  return isEditing || (isEditDashboard && widgetType !== 'DEFAULT_WIDGET');\r\n};\r\n\r\nexport const getConfigButtonState = createSelector(\r\n  [getConfigButtonSelector],\r\n  state => state\r\n);\r\n\r\nexport const getMaximizeButtonState = createSelector(\r\n  [getMaximizeButtonSelector],\r\n  state => state\r\n);\r\n\r\nexport const getRemoveButtonState = createSelector(\r\n  [getRemoveButtonSelector],\r\n  state => state\r\n);\r\n","import React from 'react';\r\nimport { FaCog, FaArrowsAlt, FaClose } from 'react-icons/lib/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { DashboardActionCreator } from '../../actions/dashboard.action';\r\nimport {\r\n  getConfigButtonState,\r\n  getMaximizeButtonState,\r\n  getRemoveButtonState\r\n} from '../../selectors/baseWidget.selectors';\r\nimport './base.scss';\r\n\r\nclass BaseWidget extends React.PureComponent {\r\n  onClickSetting = () => {\r\n    const { dispatch, widgetId, widgetType } = this.props;\r\n    if (!widgetType) {\r\n      return;\r\n    }\r\n    dispatch(DashboardActionCreator.goToSetting(widgetId));\r\n  };\r\n\r\n  onDelete = () => {\r\n    const { dispatch, widgetId } = this.props;\r\n    dispatch(DashboardActionCreator.deleteWidget(widgetId));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      widgetId,\r\n      title,\r\n      isSetting,\r\n      isDeleted,\r\n      isMaximized,\r\n      children\r\n    } = this.props;\r\n    return (\r\n      <div className=\"col-4\">\r\n        <div className=\"widget\">\r\n          <div className=\"widget-header\">\r\n            <div className=\"widget-header__text\">{title}</div>\r\n            <div className=\"widget-header__icon-group\">\r\n              {isSetting && <FaCog onClick={this.onClickSetting} />}\r\n              {isMaximized && (\r\n                <Link to={`/view/${widgetId}`}>\r\n                  <FaArrowsAlt />\r\n                </Link>\r\n              )}\r\n              {isDeleted && <FaClose onClick={this.onDelete} />}\r\n            </div>\r\n          </div>\r\n          <div className=\"widget-content\">{children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isSetting: getConfigButtonState(props),\r\n  isMaximized: getMaximizeButtonState(props),\r\n  isDeleted: getRemoveButtonState(props)\r\n});\r\n\r\nexport default connect(mapStateToProps)(BaseWidget);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, Label } from 'reactstrap';\r\nimport { DashboardActionCreator } from '../../actions/dashboard.action';\r\nimport { SETTING_COMPONENTS } from '../../constants';\r\nimport './baseSetting.scss';\r\n\r\nclass BaseSetting extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgetType: this.props.widgetType,\r\n      title: this.props.title || 'New Widget',\r\n      maxWidth: this.props.maxWidth,\r\n      maxHeight: this.props.maxHeight\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      widgetType: e.target.value\r\n    });\r\n  };\r\n\r\n  updateTitle = e => {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  };\r\n\r\n  updateWidth = e => {\r\n    this.setState({\r\n      maxWidth: e.target.value\r\n    });\r\n  };\r\n\r\n  updateHeight = e => {\r\n    this.setState({\r\n      maxHeight: e.target.value\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { dispatch, widgetId } = this.props;\r\n    dispatch(\r\n      DashboardActionCreator.updateWidgetInfo({ widgetId, ...this.state })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const SettingComponent = SETTING_COMPONENTS[this.state.widgetType];\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <Label for=\"title\">Widget Title</Label>\r\n        <Input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          onChange={this.updateTitle}\r\n          value={this.state.title}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Label>Widget type</Label>\r\n            <Input\r\n              onChange={this.onChange}\r\n              defaultValue={this.props.widgetType}\r\n              type=\"select\"\r\n            >\r\n              <option disabled value=\"DEFAULT_WIDGET\">\r\n                Select\r\n              </option>\r\n              <option value=\"TEXT_WIDGET\">Text</option>\r\n              <option value=\"DATATABLE_WIDGET\">Datatable</option>\r\n              <option value=\"TODOLIST_WIDGET\">Todo List</option>\r\n              <option value=\"SIMPLECHART_WIDGET\">Simple Chart</option>\r\n              <option value=\"STOCK_TICKER_WIDGET\">Stock Ticker</option>\r\n              <option value=\"ORG_CHART_WIDGET\">Org Chart</option>\r\n            </Input>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Label for=\"minWidth\">Min width</Label>\r\n            <Input\r\n              type=\"text\"\r\n              onChange={this.updateWidth}\r\n              value={this.state.maxWidth}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Label for=\"minHeight\">Min height</Label>\r\n            <Input\r\n              type=\"text\"\r\n              onChange={this.updateHeight}\r\n              value={this.state.maxHeight}\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr className=\"hr--custom\" />\r\n        {SettingComponent && <SettingComponent {...this.props} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(BaseSetting);\r\n","import React from 'react';\r\nimport BaseWidget from '../../components/BaseWidget/BaseWidget.component';\r\nimport BaseSetting from '../../components/WidgetSetting/BaseSetting.component';\r\nimport { FaStop, FaThList, FaTh, FaThLarge } from 'react-icons/lib/fa';\r\nimport { MdViewArray } from 'react-icons/lib/md';\r\nimport { LAYOUT_TYPES, SYSTEM_COMPONENTS } from '../../constants';\r\nimport './dashboard.scss';\r\n\r\nconst LayoutControls = ({ layoutType, onChangeLayout }) => (\r\n  <span className=\"dashboard-layout\">\r\n    <FaStop\r\n      className={\r\n        layoutType === LAYOUT_TYPES.A_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.A_COLUMN)}\r\n    />\r\n    <FaThLarge\r\n      className={\r\n        layoutType === LAYOUT_TYPES.AA_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.AA_COLUMN)}\r\n    />\r\n    <FaTh\r\n      className={\r\n        layoutType === LAYOUT_TYPES.AAA_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.AAA_COLUMN)}\r\n    />\r\n    <FaThList\r\n      className={\r\n        layoutType === LAYOUT_TYPES.AB_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.AB_COLUMN)}\r\n    />\r\n    <MdViewArray\r\n      className={\r\n        layoutType === LAYOUT_TYPES.ABA_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.ABA_COLUMN)}\r\n      size={30}\r\n    />\r\n    <FaThList\r\n      className={\r\n        layoutType === LAYOUT_TYPES.BA_COLUMN ? 'dashboard-layout--active' : ''\r\n      }\r\n      onClick={onChangeLayout(LAYOUT_TYPES.BA_COLUMN)}\r\n      style={{ transform: 'scaleX(-1)' }}\r\n    />\r\n  </span>\r\n);\r\n\r\nexport const DashboardView = ({ dashboard, onChangeLayout }) => {\r\n  const widgets =\r\n    dashboard.widgets &&\r\n    dashboard.widgets.map(props => {\r\n      const WidgetComponent = props.isEditing\r\n        ? BaseSetting\r\n        : SYSTEM_COMPONENTS[props.widgetType];\r\n\r\n      return (\r\n        <BaseWidget\r\n          key={props.widgetId}\r\n          isEditDashboard={dashboard.isEdit}\r\n          {...props}\r\n        >\r\n          <WidgetComponent {...props} />\r\n        </BaseWidget>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"dashboard__title\">\r\n        <span>{dashboard.title}</span>\r\n        {dashboard.isEdit && (\r\n          <LayoutControls\r\n            layoutType={dashboard.layoutType}\r\n            onChangeLayout={onChangeLayout}\r\n          />\r\n        )}\r\n      </div>\r\n      <div id=\"wrapper\" className=\"wrapper row\">\r\n        {widgets}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport dragula from 'dragula';\r\nimport { connect } from 'react-redux';\r\nimport { DashboardView } from './dashboard.view';\r\nimport { LAYOUT_TYPES, LAYOUT_STYLES } from '../../constants/LayoutType';\r\nimport {\r\n  DashboardActionCreator,\r\n  fetchDashboard\r\n} from '../../actions/dashboard.action';\r\n\r\nclass Dashboard extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLayout = this.onChangeLayout.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { dispatch, dashboard } = this.props;\r\n    if (!dashboard.id) {\r\n      dispatch(fetchDashboard());\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLayout(this.props.dashboard.layoutType);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isEdit } = this.props.dashboard;\r\n    if (isEdit) {\r\n      this.drake && this.drake.destroy();\r\n      this.drake = dragula([document.getElementById('wrapper')], {\r\n        direction: 'horizontal',\r\n        moves: (el, container, handle) => {\r\n          return handle.classList.contains('widget-header');\r\n        }\r\n      });\r\n    } else {\r\n      this.drake && this.drake.destroy();\r\n      this.drake = null;\r\n    }\r\n    this.updateLayout(this.props.dashboard.layoutType);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.drake && this.drake.destroy();\r\n  }\r\n\r\n  updateLayout(layoutType) {\r\n    const widgets = document.querySelectorAll('#wrapper > div');\r\n    widgets.forEach((element, idx) => {\r\n      if (layoutType !== LAYOUT_TYPES.ABA_COLUMN) {\r\n        idx % 2 === 0\r\n          ? (element.className = LAYOUT_STYLES[layoutType].oddClass)\r\n          : (element.className = LAYOUT_STYLES[layoutType].evenClass);\r\n      } else {\r\n        idx % 3 !== 1\r\n          ? (element.className = LAYOUT_STYLES[layoutType].oddClass)\r\n          : (element.className = LAYOUT_STYLES[layoutType].evenClass);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeLayout = type => () => {\r\n    this.updateLayout(type);\r\n    this.props.dispatch(DashboardActionCreator.changeLayout(type));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DashboardView\r\n        dashboard={this.props.dashboard}\r\n        onChangeLayout={this.onChangeLayout}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dashboard: state.dashboard\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n"],"sourceRoot":""}