{"version":3,"sources":["pages/tools/IncomeConversion.component.js","actions/tools.action.js"],"names":["IncomeConversionComponent","onChangeLanguage","event","value","target","_this","props","changeLanguague","convertGrossToNet","setFieldValue","values","parseFormValueToNumber","maxSI","minimumWage","deduction","personal","dependant","totalDependant","incomeForSI","income","incomeAfterSI","Math","floor","si","hi","ui","incomeForPIT","incomePIT","totalTax","calculatePIT","input","parseInt","replace","this","Object","objectSpread","convertToNumber","taxableIncome","result","pitLevels","lastLevel","length","i","to","maximum","from","percentage","parseFloat","toLocaleString","_this2","react_default","a","createElement","className","index_es","id","defaultMessage","formik_esm","type","name","render","arrayHelpers","Fragment","map","item","idx","key","title","concat","message","Tooltip_default","question_circle_default","component","MINIMUM_WAGE","region","defaultValue","lang","onChange","onClick","formattedNumber","incomeForHI","incomeForUI","incomeBeforeTax","dependantDeduction","totalPIT","netIncome","React","PureComponent","withForm","withFormik","mapPropsToValues","currency","PIT_LEVELS","level","handleSubmit","_ref","setSubmitting","withConnect","connect","state","locales","dispatch","payload","compose"],"mappings":"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","file":"static/js/7.032a94fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withFormik, Field, FieldArray } from 'formik';\r\nimport { changeLanguague } from '../../actions/tools.action';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FaQuestionCircleO from 'react-icons/lib/fa/question-circle';\r\nimport { PIT_LEVELS, MINIMUM_WAGE } from '../../constants';\r\n\r\nclass IncomeConversionComponent extends React.PureComponent {\r\n  convertToNumber(input) {\r\n    if (typeof input === 'string') {\r\n      return parseInt(input.replace(/[\\D]/g, ''), 10);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeLanguage = event => {\r\n    const value = event.target.value;\r\n    this.props.changeLanguague(value);\r\n  };\r\n\r\n  parseFormValueToNumber() {\r\n    const { values } = this.props;\r\n    return {\r\n      ...values,\r\n      income: this.convertToNumber(values.income),\r\n      minimumWage: this.convertToNumber(values.minimumWage),\r\n      personal: this.convertToNumber(values.personal),\r\n      dependant: this.convertToNumber(values.dependant)\r\n    };\r\n  }\r\n\r\n  calculatePIT(taxableIncome) {\r\n    let result = 0;\r\n    const { pitLevels } = this.props.values;\r\n    const lastLevel = pitLevels.length - 1;\r\n    for (var i = 0; i < lastLevel; i++) {\r\n      if (taxableIncome >= pitLevels[i].to)\r\n        pitLevels[i].value = pitLevels[i].maximum;\r\n      else if (\r\n        pitLevels[i].from <= taxableIncome &&\r\n        taxableIncome <= pitLevels[i].to\r\n      )\r\n        pitLevels[i].value = Math.floor(\r\n          ((taxableIncome - pitLevels[i].from) * pitLevels[i].percentage) / 100\r\n        );\r\n      else pitLevels[i].value = 0;\r\n      result = result + pitLevels[i].value;\r\n    }\r\n    if (taxableIncome > pitLevels[lastLevel].from)\r\n      pitLevels[lastLevel].value = Math.floor(\r\n        ((taxableIncome - pitLevels[lastLevel].from) *\r\n          pitLevels[lastLevel].percentage) /\r\n          100\r\n      );\r\n    else pitLevels[lastLevel].value = 0;\r\n    result += pitLevels[lastLevel].value;\r\n    return result;\r\n  }\r\n\r\n  convertGrossToNet = () => {\r\n    const { setFieldValue } = this.props;\r\n    const values = this.parseFormValueToNumber();\r\n    const maxSI = values.minimumWage * 20;\r\n    const deduction =\r\n      values.personal + values.dependant * values.totalDependant;\r\n    const incomeForSI = values.income <= maxSI ? values.income : maxSI;\r\n    const incomeAfterSI = Math.floor(\r\n      values.income - (incomeForSI * (values.si + values.hi + values.ui)) / 100\r\n    );\r\n    const incomeForPIT = incomeAfterSI - deduction;\r\n    const incomePIT = incomeForPIT < 0 ? 0 : incomeForPIT;\r\n    const totalTax = this.calculatePIT(incomePIT);\r\n    setFieldValue('incomeBeforeTax', incomeAfterSI);\r\n    setFieldValue('taxableIncome', incomePIT);\r\n    setFieldValue('incomeForSI', Math.floor(incomeForSI * values.si) / 100);\r\n    setFieldValue('incomeForHI', Math.floor(incomeForSI * values.hi) / 100);\r\n    setFieldValue('incomeForUI', Math.floor(incomeForSI * values.ui) / 100);\r\n    setFieldValue(\r\n      'dependantDeduction',\r\n      values.dependant * values.totalDependant\r\n    );\r\n    setFieldValue('totalPIT', totalTax);\r\n    setFieldValue('netIncome', incomeAfterSI - totalTax);\r\n  };\r\n\r\n  formattedNumber(value) {\r\n    return parseFloat(value).toLocaleString();\r\n  }\r\n\r\n  render() {\r\n    const { values } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 order-md-2 mb-4\">\r\n            <h4 className=\"mb-3\">\r\n              <FormattedMessage\r\n                id=\"tools.section.deduction\"\r\n                defaultMessage=\"Default message\"\r\n              />\r\n            </h4>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                <FormattedMessage\r\n                  id=\"tools.personal\"\r\n                  defaultMessage=\"Default message\"\r\n                />\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Field type=\"text\" name=\"personal\" className=\"form-control\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                <FormattedMessage\r\n                  id=\"tools.dependant\"\r\n                  defaultMessage=\"Default message\"\r\n                />\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Field type=\"text\" name=\"dependant\" className=\"form-control\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                <FormattedMessage\r\n                  id=\"tools.totalDependant\"\r\n                  defaultMessage=\"Default message\"\r\n                />\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"totalDependant\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <h4 className=\"mb-3\">\r\n              <FormattedMessage\r\n                id=\"tools.section.pitLevel\"\r\n                defaultMessage=\"Default message\"\r\n              />\r\n            </h4>\r\n            <FieldArray\r\n              name=\"pitLevels\"\r\n              render={arrayHelpers => (\r\n                <>\r\n                  {values.pitLevels.map((item, idx) => (\r\n                    <div key={idx} className=\"form-group row\">\r\n                      <label className=\"col-sm-6 col-form-label\">\r\n                        <FormattedMessage\r\n                          id={item.title}\r\n                          defaultMessage=\"Default message\"\r\n                        />{' '}\r\n                        (%)\r\n                      </label>\r\n                      <div className=\"col-sm-6\">\r\n                        <Field\r\n                          type=\"text\"\r\n                          name={`pitLevels.${idx}.percentage`}\r\n                          className=\"form-control\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              )}\r\n            />\r\n\r\n            <h4 className=\"mb-3\">\r\n              <FormattedMessage\r\n                id=\"tools.section.setting\"\r\n                defaultMessage=\"Default message\"\r\n              />\r\n            </h4>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                <FormattedMessage\r\n                  id=\"tools.minimumWage\"\r\n                  defaultMessage=\"Default message\"\r\n                />\r\n\r\n                <FormattedMessage\r\n                  id=\"tools.minimumWageTooltip\"\r\n                  defaultMessage=\"Default message\"\r\n                  values={{\r\n                    value: values.minimumWage\r\n                  }}\r\n                >\r\n                  {message => (\r\n                    <Tooltip title={message}>\r\n                      <FaQuestionCircleO />\r\n                    </Tooltip>\r\n                  )}\r\n                </FormattedMessage>\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Field\r\n                  component=\"select\"\r\n                  name=\"minimumWage\"\r\n                  className=\"form-control\"\r\n                >\r\n                  {MINIMUM_WAGE.map((item, idx) => (\r\n                    <option key={idx} value={item.value}>\r\n                      {item.region}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                <FormattedMessage\r\n                  id=\"tools.lang\"\r\n                  defaultMessage=\"Default message\"\r\n                />\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <select\r\n                  defaultValue={this.props.lang}\r\n                  onChange={this.onChangeLanguage}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"en\">English</option>\r\n                  <option value=\"vi\">Vietnamese</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8 order-md-1\">\r\n            <h4 className=\"mb-3\">\r\n              <FormattedMessage\r\n                id=\"tools.section.title\"\r\n                defaultMessage=\"Default message\"\r\n              />\r\n            </h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label>\r\n                  <FormattedMessage\r\n                    id=\"tools.income\"\r\n                    defaultMessage=\"Default message\"\r\n                  />\r\n                </label>\r\n                <Field name=\"income\" className=\"form-control\" />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label>\r\n                  <FormattedMessage\r\n                    id=\"tools.section.currency\"\r\n                    defaultMessage=\"Default message\"\r\n                  />\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name=\"currency\"\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"usd\">USD</option>\r\n                  <option value=\"vnd\">VND</option>\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.convertGrossToNet}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Convert to NET\r\n                </button>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  Convert to GROSS\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"mt-3\">\r\n                  <FormattedMessage\r\n                    id=\"tools.section.detail\"\r\n                    defaultMessage=\"Default message\"\r\n                  />\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <ul className=\"list-group mb-3\">\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.grossIncome\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                      <FormattedMessage\r\n                        id=\"tools.grossIncomeTooltip\"\r\n                        defaultMessage=\"Default message\"\r\n                      >\r\n                        {message => (\r\n                          <Tooltip title={message}>\r\n                            <FaQuestionCircleO />\r\n                          </Tooltip>\r\n                        )}\r\n                      </FormattedMessage>\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.income)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.socialInsurance\"\r\n                        defaultMessage=\"Default message\"\r\n                      />{' '}\r\n                      (8%)\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.incomeForSI)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.healthInsurance\"\r\n                        defaultMessage=\"Default message\"\r\n                      />{' '}\r\n                      (1.5%)\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.incomeForHI)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.unemploymentInsurance\"\r\n                        defaultMessage=\"Default message\"\r\n                      />{' '}\r\n                      (0.5%)\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.incomeForUI)}\r\n                    </span>\r\n                  </li>\r\n\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.incomeBeforeTax\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.incomeBeforeTax)}\r\n                    </span>\r\n                  </li>\r\n\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.deduction\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                    </h6>\r\n                    <span className=\"text-success\">{values.personal}</span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.dependantDeduction\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.dependantDeduction)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.taxableIncome\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.taxableIncome)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.pit\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.totalPIT)}\r\n                    </span>\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <h6>\r\n                      <FormattedMessage\r\n                        id=\"tools.netIncome\"\r\n                        defaultMessage=\"Default message\"\r\n                      />\r\n                      <FormattedMessage\r\n                        id=\"tools.netIncome\"\r\n                        defaultMessage=\"Default message\"\r\n                      >\r\n                        {message => (\r\n                          <Tooltip title={message}>\r\n                            <FaQuestionCircleO />\r\n                          </Tooltip>\r\n                        )}\r\n                      </FormattedMessage>\r\n                    </h6>\r\n                    <span className=\"text-success\">\r\n                      {this.formattedNumber(values.netIncome)}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"mb-3\">\r\n                  <FormattedMessage\r\n                    id=\"tools.pitDetail\"\r\n                    defaultMessage=\"Default message\"\r\n                  />\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {values.pitLevels.map((item, idx) => (\r\n                <React.Fragment key={idx}>\r\n                  <h6 className=\"col-sm-6\">\r\n                    <FormattedMessage\r\n                      id={item.title}\r\n                      defaultMessage=\"Default message\"\r\n                    />{' '}\r\n                    (%)\r\n                  </h6>\r\n                  <h6 className=\"col-sm-6 text-right\">\r\n                    {this.formattedNumber(item.value)}\r\n                  </h6>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst withForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    income: 0,\r\n    netIncome: 0,\r\n    incomeBeforeTax: 0,\r\n    taxableIncome: 0,\r\n    incomeForSI: 0,\r\n    incomeForHI: 0,\r\n    incomeForUI: 0,\r\n    dependantDeduction: 0,\r\n    totalPIT: 0,\r\n    si: 8,\r\n    hi: 1.5,\r\n    ui: 1,\r\n    currency: 'vnd',\r\n    minimumWage: '3,980,000',\r\n    personal: '9,000,000',\r\n    dependant: '3,600,000',\r\n    totalDependant: 0,\r\n    pitLevels: PIT_LEVELS.map(level => ({ ...level }))\r\n  }),\r\n  handleSubmit: (values, { setSubmitting }) => {\r\n    // setTimeout(() => {\r\n    //   setSubmitting(false);\r\n    // }, 1000);\r\n  }\r\n});\r\n\r\nconst withConnect = connect(\r\n  state => {\r\n    return state.locales;\r\n  },\r\n  { changeLanguague }\r\n);\r\n\r\nexport default compose(\r\n  withForm,\r\n  withConnect\r\n)(IncomeConversionComponent);\r\n","export const changeLanguague = value => dispatch => {\r\n  dispatch({\r\n    type: 'CHANGE_LANGUAGE',\r\n    payload: value\r\n  });\r\n};\r\n"],"sourceRoot":""}